{"ast":null,"code":"var _jsxFileName = \"/Users/nalin/Coding/gafo-games/src/components/Home.js\",\n  _s = $RefreshSig$();\n// src/components/Home.js - Enhanced Game Creation Flow\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation, Link } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [playerName, setPlayerName] = useState('');\n  const [gameId, setGameId] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [socketStatus, setSocketStatus] = useState('disconnected');\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    // Check if we have a game ID in the URL (for direct links)\n    const pathParts = location.pathname.split('/');\n    if (pathParts.length > 2 && pathParts[1] === 'game') {\n      const urlGameId = pathParts[2];\n      // If there's a game ID in the URL, save it and redirect when ready\n      if (urlGameId) {\n        console.log('Found game ID in URL:', urlGameId);\n        const savedName = localStorage.getItem('playerName');\n        if (savedName) {\n          // We have both name and game ID, redirect immediately\n          navigate(`/game/${urlGameId}`);\n          return;\n        } else {\n          // We have game ID but need a name, store ID for later\n          setGameId(urlGameId);\n        }\n      }\n    }\n\n    // Check for pending game ID from previous navigation\n    const pendingGameId = localStorage.getItem('pendingGameId');\n    if (pendingGameId) {\n      setGameId(pendingGameId);\n    }\n    const savedName = localStorage.getItem('playerName');\n    if (savedName) {\n      setPlayerName(savedName);\n    }\n\n    // Setup socket connection\n    const connectSocket = () => {\n      const SOCKET_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001';\n      console.log('Connecting to socket at:', SOCKET_URL);\n      setSocketStatus('connecting');\n\n      // Test the connection first with a fetch\n      fetch(`${SOCKET_URL}/ping`).then(response => response.text()).then(data => console.log('Server ping response:', data)).catch(err => {\n        console.error('Server ping failed:', err);\n        setSocketStatus('ping-failed');\n      });\n      const newSocket = io(SOCKET_URL, {\n        forceNew: true,\n        reconnection: true,\n        reconnectionAttempts: 5,\n        timeout: 10000,\n        transports: ['websocket', 'polling']\n      });\n      newSocket.on('connect', () => {\n        console.log('Socket connected successfully with ID:', newSocket.id);\n        setSocketStatus('connected');\n      });\n      newSocket.on('connect_error', err => {\n        console.error('Socket connection error:', err);\n        setError('Unable to connect to game server. Please try again.');\n        setSocketStatus('error');\n        setLoading(false);\n      });\n      newSocket.on('disconnect', reason => {\n        console.log('Socket disconnected:', reason);\n        setSocketStatus('disconnected');\n      });\n\n      // Listen for responses\n      newSocket.on('gameCreated', ({\n        gameId\n      }) => {\n        console.log('Game created with ID:', gameId);\n\n        // IMPORTANT: Set creator status BEFORE navigating\n        localStorage.setItem('gameCreator', gameId);\n\n        // Clear any pending game ID\n        localStorage.removeItem('pendingGameId');\n\n        // Give the server a moment to set up the game before joining\n        setTimeout(() => {\n          setLoading(false);\n          navigate(`/game/${gameId}`);\n        }, 500);\n      });\n      newSocket.on('gameExists', ({\n        exists,\n        gameId: foundGameId\n      }) => {\n        console.log('Game exists response:', exists, foundGameId);\n        setLoading(false);\n        if (exists) {\n          localStorage.removeItem('gameCreator'); // Not the creator\n          localStorage.removeItem('pendingGameId'); // Clear pending ID\n          navigate(`/game/${foundGameId}`);\n        } else {\n          setError('Game not found. Please check the Game ID');\n        }\n      });\n      newSocket.on('error', error => {\n        console.error('Received error:', error);\n        setLoading(false);\n        setError(error.message || 'An error occurred');\n      });\n      setSocket(newSocket);\n      return newSocket;\n    };\n    const newSocket = connectSocket();\n\n    // Clean up on unmount\n    return () => {\n      console.log('Disconnecting socket');\n      if (newSocket) newSocket.disconnect();\n    };\n  }, [navigate, location.pathname]);\n\n  // Function to test the connection\n  const testConnection = () => {\n    const SOCKET_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001';\n    console.log('Testing server connection to:', SOCKET_URL);\n    fetch(`${SOCKET_URL}/ping`).then(response => response.text()).then(data => {\n      console.log('Server ping response:', data);\n      alert(`Server responded: ${data}`);\n    }).catch(err => {\n      console.error('Server ping failed:', err);\n      alert(`Failed to connect to server: ${err.message}`);\n    });\n  };\n  const handleCreateGame = () => {\n    if (!playerName.trim()) {\n      setError('Please enter your name');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    localStorage.setItem('playerName', playerName);\n    if (socket && socket.connected) {\n      console.log('Requesting to create game for:', playerName);\n      // Clear any previous creator status\n      localStorage.removeItem('gameCreator');\n      socket.emit('createGame', {\n        playerName\n      });\n    } else {\n      console.error('Socket not connected, socket state:', socket === null || socket === void 0 ? void 0 : socket.connected);\n      setError('Connection error. Please refresh the page.');\n      setLoading(false);\n    }\n  };\n  const handleJoinGame = () => {\n    if (!playerName.trim()) {\n      setError('Please enter your name');\n      return;\n    }\n    if (!gameId.trim()) {\n      setError('Please enter a game ID');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    localStorage.setItem('playerName', playerName);\n    if (socket && socket.connected) {\n      const trimmedId = gameId.trim().toUpperCase();\n      console.log('Checking if game exists:', trimmedId);\n      // Clear any previous creator status\n      localStorage.removeItem('gameCreator');\n      socket.emit('checkGame', {\n        gameId: trimmedId\n      });\n    } else {\n      console.error('Socket not connected, socket state:', socket === null || socket === void 0 ? void 0 : socket.connected);\n      setError('Connection error. Please refresh the page.');\n      setLoading(false);\n    }\n  };\n  const generateGameLink = () => {\n    if (!gameId.trim()) {\n      setError('Please enter a game ID to generate a link');\n      return;\n    }\n    const trimmedId = gameId.trim().toUpperCase();\n    const gameLink = `${window.location.origin}/game/${trimmedId}`;\n\n    // Copy to clipboard\n    navigator.clipboard.writeText(gameLink).then(() => {\n      alert(`Game link copied to clipboard: ${gameLink}`);\n    }).catch(err => {\n      console.error('Could not copy link:', err);\n      alert(`Game link (copy manually): ${gameLink}`);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"back-to-games\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"back-link\",\n        children: \"\\u2190 Back to Games\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chappal vs Cockroach\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"socket-status\",\n      children: [\"Connection: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `status-${socketStatus}`,\n        children: socketStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: testConnection,\n        className: \"test-connection-btn\",\n        children: \"Test Connection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"playerName\",\n        children: \"Your Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"playerName\",\n        value: playerName,\n        onChange: e => setPlayerName(e.target.value),\n        placeholder: \"Enter your name\",\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-group\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create-game-btn\",\n        onClick: handleCreateGame,\n        disabled: loading || socketStatus !== 'connected',\n        children: loading ? 'Creating...' : 'Create a Game'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"join-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Join Existing Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"gameId\",\n          children: \"Game ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"gameId\",\n          value: gameId,\n          onChange: e => setGameId(e.target.value),\n          placeholder: \"Enter game ID\",\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"join-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"join-game-btn\",\n          onClick: handleJoinGame,\n          disabled: loading || socketStatus !== 'connected',\n          children: loading ? 'Joining...' : 'Join Game'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"generate-link-btn\",\n          onClick: generateGameLink,\n          disabled: !gameId.trim(),\n          children: \"Generate Game Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-rules\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Game Rules\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rules-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Game Mechanics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Each player gets chappal cards with values from 2-8.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Each chappal card has two sides: white and dark.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"The game runs for 3 rounds with different rules in each round.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"In each round, cockroach cards (white or dark) are revealed one by one.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Players must play a matching color chappal to defeat a cockroach.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"White chappal can only defeat white cockroach; dark chappal can only defeat dark cockroach.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Dummy cards (safetypin, almond, etc.) provide no points and discard your chappal when played.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Round Rules\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Round 1:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this), \" Your chappal value must be HIGHER or EQUAL to the cockroach value.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Round 2:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 17\n            }, this), \" Your chappal value must be LOWER or EQUAL to the cockroach value.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Round 3:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 17\n            }, this), \" White chappal must be HIGHER or EQUAL; Dark chappal must be LOWER or EQUAL.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Winning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"The player with the highest total score after all 3 rounds wins the game!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        /* Existing styles */\n        .socket-status {\n          margin: 10px 0 20px;\n          font-size: 14px;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          gap: 10px;\n        }\n        .status-connected { color: green; font-weight: bold; }\n        .status-connecting { color: orange; }\n        .status-disconnected, .status-error, .status-ping-failed { color: red; }\n        .test-connection-btn {\n          background-color: #607d8b;\n          color: white;\n          border: none;\n          border-radius: 4px;\n          padding: 5px 10px;\n          font-size: 12px;\n          cursor: pointer;\n        }\n        .join-actions {\n          display: flex;\n          gap: 10px;\n          margin-top: 15px;\n        }\n        .generate-link-btn {\n          background-color: #673AB7;\n          color: white;\n          border: none;\n          padding: 14px 24px;\n          border-radius: 8px;\n          font-size: 16px;\n          font-weight: 700;\n          cursor: pointer;\n          transition: all 0.3s;\n          flex: 1;\n        }\n        .join-game-btn {\n          flex: 1;\n        }\n        .game-rules {\n          margin-top: 40px;\n          text-align: left;\n        }\n        .rules-container {\n          background-color: #f9f9f9;\n          padding: 20px;\n          border-radius: 10px;\n          margin-top: 15px;\n        }\n        .rules-container h3 {\n          color: #FF5722;\n          margin-top: 15px;\n          margin-bottom: 10px;\n        }\n        .rules-container ul {\n          padding-left: 20px;\n        }\n        .rules-container li {\n          margin-bottom: 8px;\n        }\n        \n        /* New styles for back navigation */\n        .back-to-games {\n          margin-bottom: 20px;\n          text-align: left;\n        }\n        \n        .back-link {\n          display: inline-flex;\n          align-items: center;\n          color: #666;\n          text-decoration: none;\n          padding: 8px 12px;\n          border-radius: 5px;\n          transition: all 0.3s;\n          font-weight: 600;\n        }\n        \n        .back-link:hover {\n          background-color: #f5f5f5;\n          color: #ff5722;\n          transform: translateX(-3px);\n        }\n        \n        /* Ensure responsive layout for the back button */\n        @media (max-width: 768px) {\n          .back-to-games {\n            margin-bottom: 15px;\n          }\n          \n          .back-link {\n            font-size: 0.9rem;\n            padding: 6px 10px;\n          }\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"PfLoG36YE2ZOLxssdKUKnd+4JU8=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","Link","io","jsxDEV","_jsxDEV","Home","_s","playerName","setPlayerName","gameId","setGameId","error","setError","loading","setLoading","socketStatus","setSocketStatus","navigate","location","socket","setSocket","pathParts","pathname","split","length","urlGameId","console","log","savedName","localStorage","getItem","pendingGameId","connectSocket","SOCKET_URL","process","env","REACT_APP_API_URL","fetch","then","response","text","data","catch","err","newSocket","forceNew","reconnection","reconnectionAttempts","timeout","transports","on","id","reason","setItem","removeItem","setTimeout","exists","foundGameId","message","disconnect","testConnection","alert","handleCreateGame","trim","connected","emit","handleJoinGame","trimmedId","toUpperCase","generateGameLink","gameLink","window","origin","navigator","clipboard","writeText","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","onClick","htmlFor","type","value","onChange","e","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["/Users/nalin/Coding/gafo-games/src/components/Home.js"],"sourcesContent":["// src/components/Home.js - Enhanced Game Creation Flow\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation, Link } from 'react-router-dom';\nimport io from 'socket.io-client';\n\nconst Home = () => {\n  const [playerName, setPlayerName] = useState('');\n  const [gameId, setGameId] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [socketStatus, setSocketStatus] = useState('disconnected');\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [socket, setSocket] = useState(null);\n\n  useEffect(() => {\n    // Check if we have a game ID in the URL (for direct links)\n    const pathParts = location.pathname.split('/');\n    if (pathParts.length > 2 && pathParts[1] === 'game') {\n      const urlGameId = pathParts[2];\n      // If there's a game ID in the URL, save it and redirect when ready\n      if (urlGameId) {\n        console.log('Found game ID in URL:', urlGameId);\n        \n        const savedName = localStorage.getItem('playerName');\n        if (savedName) {\n          // We have both name and game ID, redirect immediately\n          navigate(`/game/${urlGameId}`);\n          return;\n        } else {\n          // We have game ID but need a name, store ID for later\n          setGameId(urlGameId);\n        }\n      }\n    }\n\n    // Check for pending game ID from previous navigation\n    const pendingGameId = localStorage.getItem('pendingGameId');\n    if (pendingGameId) {\n      setGameId(pendingGameId);\n    }\n\n    const savedName = localStorage.getItem('playerName');\n    if (savedName) {\n      setPlayerName(savedName);\n    }\n\n    // Setup socket connection\n    const connectSocket = () => {\n      const SOCKET_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001';\n      console.log('Connecting to socket at:', SOCKET_URL);\n      \n      setSocketStatus('connecting');\n      \n      // Test the connection first with a fetch\n      fetch(`${SOCKET_URL}/ping`)\n        .then(response => response.text())\n        .then(data => console.log('Server ping response:', data))\n        .catch(err => {\n          console.error('Server ping failed:', err);\n          setSocketStatus('ping-failed');\n        });\n      \n      const newSocket = io(SOCKET_URL, { \n        forceNew: true,\n        reconnection: true,\n        reconnectionAttempts: 5,\n        timeout: 10000,\n        transports: ['websocket', 'polling']\n      });\n      \n      newSocket.on('connect', () => {\n        console.log('Socket connected successfully with ID:', newSocket.id);\n        setSocketStatus('connected');\n      });\n\n      newSocket.on('connect_error', (err) => {\n        console.error('Socket connection error:', err);\n        setError('Unable to connect to game server. Please try again.');\n        setSocketStatus('error');\n        setLoading(false);\n      });\n\n      newSocket.on('disconnect', (reason) => {\n        console.log('Socket disconnected:', reason);\n        setSocketStatus('disconnected');\n      });\n\n      // Listen for responses\n      newSocket.on('gameCreated', ({ gameId }) => {\n        console.log('Game created with ID:', gameId);\n        \n        // IMPORTANT: Set creator status BEFORE navigating\n        localStorage.setItem('gameCreator', gameId);\n        \n        // Clear any pending game ID\n        localStorage.removeItem('pendingGameId');\n        \n        // Give the server a moment to set up the game before joining\n        setTimeout(() => {\n          setLoading(false);\n          navigate(`/game/${gameId}`);\n        }, 500);\n      });\n\n      newSocket.on('gameExists', ({ exists, gameId: foundGameId }) => {\n        console.log('Game exists response:', exists, foundGameId);\n        setLoading(false);\n        if (exists) {\n          localStorage.removeItem('gameCreator'); // Not the creator\n          localStorage.removeItem('pendingGameId'); // Clear pending ID\n          navigate(`/game/${foundGameId}`);\n        } else {\n          setError('Game not found. Please check the Game ID');\n        }\n      });\n\n      newSocket.on('error', (error) => {\n        console.error('Received error:', error);\n        setLoading(false);\n        setError(error.message || 'An error occurred');\n      });\n\n      setSocket(newSocket);\n      return newSocket;\n    };\n\n    const newSocket = connectSocket();\n\n    // Clean up on unmount\n    return () => {\n      console.log('Disconnecting socket');\n      if (newSocket) newSocket.disconnect();\n    };\n  }, [navigate, location.pathname]);\n\n  // Function to test the connection\n  const testConnection = () => {\n    const SOCKET_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001';\n    console.log('Testing server connection to:', SOCKET_URL);\n    \n    fetch(`${SOCKET_URL}/ping`)\n      .then(response => response.text())\n      .then(data => {\n        console.log('Server ping response:', data);\n        alert(`Server responded: ${data}`);\n      })\n      .catch(err => {\n        console.error('Server ping failed:', err);\n        alert(`Failed to connect to server: ${err.message}`);\n      });\n  };\n\n  const handleCreateGame = () => {\n    if (!playerName.trim()) {\n      setError('Please enter your name');\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n    localStorage.setItem('playerName', playerName);\n    \n    if (socket && socket.connected) {\n      console.log('Requesting to create game for:', playerName);\n      // Clear any previous creator status\n      localStorage.removeItem('gameCreator');\n      socket.emit('createGame', { playerName });\n    } else {\n      console.error('Socket not connected, socket state:', socket?.connected);\n      setError('Connection error. Please refresh the page.');\n      setLoading(false);\n    }\n  };\n\n  const handleJoinGame = () => {\n    if (!playerName.trim()) {\n      setError('Please enter your name');\n      return;\n    }\n    if (!gameId.trim()) {\n      setError('Please enter a game ID');\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n    localStorage.setItem('playerName', playerName);\n    \n    if (socket && socket.connected) {\n      const trimmedId = gameId.trim().toUpperCase();\n      console.log('Checking if game exists:', trimmedId);\n      // Clear any previous creator status\n      localStorage.removeItem('gameCreator');\n      socket.emit('checkGame', { gameId: trimmedId });\n    } else {\n      console.error('Socket not connected, socket state:', socket?.connected);\n      setError('Connection error. Please refresh the page.');\n      setLoading(false);\n    }\n  };\n\n  const generateGameLink = () => {\n    if (!gameId.trim()) {\n      setError('Please enter a game ID to generate a link');\n      return;\n    }\n    \n    const trimmedId = gameId.trim().toUpperCase();\n    const gameLink = `${window.location.origin}/game/${trimmedId}`;\n    \n    // Copy to clipboard\n    navigator.clipboard.writeText(gameLink)\n      .then(() => {\n        alert(`Game link copied to clipboard: ${gameLink}`);\n      })\n      .catch(err => {\n        console.error('Could not copy link:', err);\n        alert(`Game link (copy manually): ${gameLink}`);\n      });\n  };\n\n  return (\n    <div className=\"home-container\">\n      {/* Added navigation back to the games page */}\n      <div className=\"back-to-games\">\n        <Link to=\"/\" className=\"back-link\">\n          &larr; Back to Games\n        </Link>\n      </div>\n      \n      <h1>Chappal vs Cockroach</h1>\n      \n      <div className=\"socket-status\">\n        Connection: <span className={`status-${socketStatus}`}>{socketStatus}</span>\n        <button onClick={testConnection} className=\"test-connection-btn\">\n          Test Connection\n        </button>\n      </div>\n      \n      <div className=\"form-group\">\n        <label htmlFor=\"playerName\">Your Name:</label>\n        <input\n          type=\"text\"\n          id=\"playerName\"\n          value={playerName}\n          onChange={(e) => setPlayerName(e.target.value)}\n          placeholder=\"Enter your name\"\n          disabled={loading}\n        />\n      </div>\n\n      <div className=\"button-group\">\n        <button \n          className=\"create-game-btn\" \n          onClick={handleCreateGame}\n          disabled={loading || socketStatus !== 'connected'}\n        >\n          {loading ? 'Creating...' : 'Create a Game'}\n        </button>\n      </div>\n\n      <div className=\"join-section\">\n        <h2>Join Existing Game</h2>\n        <div className=\"form-group\">\n          <label htmlFor=\"gameId\">Game ID:</label>\n          <input\n            type=\"text\"\n            id=\"gameId\"\n            value={gameId}\n            onChange={(e) => setGameId(e.target.value)}\n            placeholder=\"Enter game ID\"\n            disabled={loading}\n          />\n        </div>\n        <div className=\"join-actions\">\n          <button \n            className=\"join-game-btn\" \n            onClick={handleJoinGame}\n            disabled={loading || socketStatus !== 'connected'}\n          >\n            {loading ? 'Joining...' : 'Join Game'}\n          </button>\n          <button \n            className=\"generate-link-btn\" \n            onClick={generateGameLink}\n            disabled={!gameId.trim()}\n          >\n            Generate Game Link\n          </button>\n        </div>\n      </div>\n\n      {error && <div className=\"error-message\">{error}</div>}\n      \n      <div className=\"game-rules\">\n        <h2>Game Rules</h2>\n        <div className=\"rules-container\">\n          <h3>Game Mechanics</h3>\n          <ul>\n            <li>Each player gets chappal cards with values from 2-8.</li>\n            <li>Each chappal card has two sides: white and dark.</li>\n            <li>The game runs for 3 rounds with different rules in each round.</li>\n            <li>In each round, cockroach cards (white or dark) are revealed one by one.</li>\n            <li>Players must play a matching color chappal to defeat a cockroach.</li>\n            <li>White chappal can only defeat white cockroach; dark chappal can only defeat dark cockroach.</li>\n            <li>Dummy cards (safetypin, almond, etc.) provide no points and discard your chappal when played.</li>\n          </ul>\n          \n          <h3>Round Rules</h3>\n          <ul>\n            <li><strong>Round 1:</strong> Your chappal value must be HIGHER or EQUAL to the cockroach value.</li>\n            <li><strong>Round 2:</strong> Your chappal value must be LOWER or EQUAL to the cockroach value.</li>\n            <li><strong>Round 3:</strong> White chappal must be HIGHER or EQUAL; Dark chappal must be LOWER or EQUAL.</li>\n          </ul>\n          \n          <h3>Winning</h3>\n          <p>The player with the highest total score after all 3 rounds wins the game!</p>\n        </div>\n      </div>\n      \n      <style>{`\n        /* Existing styles */\n        .socket-status {\n          margin: 10px 0 20px;\n          font-size: 14px;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          gap: 10px;\n        }\n        .status-connected { color: green; font-weight: bold; }\n        .status-connecting { color: orange; }\n        .status-disconnected, .status-error, .status-ping-failed { color: red; }\n        .test-connection-btn {\n          background-color: #607d8b;\n          color: white;\n          border: none;\n          border-radius: 4px;\n          padding: 5px 10px;\n          font-size: 12px;\n          cursor: pointer;\n        }\n        .join-actions {\n          display: flex;\n          gap: 10px;\n          margin-top: 15px;\n        }\n        .generate-link-btn {\n          background-color: #673AB7;\n          color: white;\n          border: none;\n          padding: 14px 24px;\n          border-radius: 8px;\n          font-size: 16px;\n          font-weight: 700;\n          cursor: pointer;\n          transition: all 0.3s;\n          flex: 1;\n        }\n        .join-game-btn {\n          flex: 1;\n        }\n        .game-rules {\n          margin-top: 40px;\n          text-align: left;\n        }\n        .rules-container {\n          background-color: #f9f9f9;\n          padding: 20px;\n          border-radius: 10px;\n          margin-top: 15px;\n        }\n        .rules-container h3 {\n          color: #FF5722;\n          margin-top: 15px;\n          margin-bottom: 10px;\n        }\n        .rules-container ul {\n          padding-left: 20px;\n        }\n        .rules-container li {\n          margin-bottom: 8px;\n        }\n        \n        /* New styles for back navigation */\n        .back-to-games {\n          margin-bottom: 20px;\n          text-align: left;\n        }\n        \n        .back-link {\n          display: inline-flex;\n          align-items: center;\n          color: #666;\n          text-decoration: none;\n          padding: 8px 12px;\n          border-radius: 5px;\n          transition: all 0.3s;\n          font-weight: 600;\n        }\n        \n        .back-link:hover {\n          background-color: #f5f5f5;\n          color: #ff5722;\n          transform: translateX(-3px);\n        }\n        \n        /* Ensure responsive layout for the back button */\n        @media (max-width: 768px) {\n          .back-to-games {\n            margin-bottom: 15px;\n          }\n          \n          .back-link {\n            font-size: 0.9rem;\n            padding: 6px 10px;\n          }\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}